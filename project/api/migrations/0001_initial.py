# Generated by Django 5.1.1 on 2025-06-24 06:20

import api.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('height', models.IntegerField()),
                ('width', models.IntegerField()),
                ('length', models.IntegerField()),
                ('max_cooler_height', models.IntegerField()),
                ('window_material', models.CharField(max_length=49)),
                ('compatible_form_factors', models.CharField(max_length=99)),
                ('form_factor', models.CharField(max_length=49)),
                ('side_fan_support', models.CharField(max_length=99)),
                ('front_panel_interfaces', models.CharField(max_length=199)),
                ('possibility_install_LCS', models.BooleanField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Case', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Cooler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('power_dissipation', models.IntegerField()),
                ('diameter', models.FloatField()),
                ('sockets', models.CharField(max_length=499)),
                ('height', models.IntegerField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Cooler', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Disc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('disc_type', models.CharField(max_length=3)),
                ('interface', models.CharField(max_length=9)),
                ('volume', models.IntegerField()),
                ('read_speed', models.IntegerField()),
                ('write_speed', models.IntegerField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Disc', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Fan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('size', models.CharField(help_text='00x00mm', max_length=19)),
                ('power_connector_type', models.BooleanField(help_text='4 pin Male / 4 pin Female')),
                ('max_rotation_speed', models.IntegerField(help_text='RPM')),
                ('total_voltage', models.IntegerField()),
                ('max_current', models.FloatField(help_text='mA')),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Fan', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='GraphicCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('chip_name', models.CharField(max_length=99)),
                ('memory_type', models.CharField(max_length=5)),
                ('architecture', models.CharField(max_length=99)),
                ('maximum_resolution', models.CharField(max_length=19)),
                ('core_frequency', models.FloatField()),
                ('memory_frequency', models.FloatField()),
                ('memory_volume', models.IntegerField()),
                ('tech_process', models.IntegerField()),
                ('tdp', models.IntegerField()),
                ('pcie_version', models.FloatField()),
                ('cuda_cores', models.IntegerField()),
                ('memory_bus_capacity', models.IntegerField()),
                ('add_power_connector', models.IntegerField(help_text='pin')),
                ('num_lines_pcie', models.IntegerField()),
                ('max_memory_bandwidth', models.FloatField(help_text='Gb/s')),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='GraphicCard', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Headphones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('connect_type', models.CharField(max_length=19)),
                ('origin_country', models.CharField(max_length=99)),
                ('microphone', models.BooleanField()),
                ('max_reproducible_frequency', models.IntegerField(help_text='Hz')),
                ('min_reproducible_frequency', models.IntegerField(help_text='Hz')),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('connector', models.CharField(max_length=99)),
                ('type', models.CharField(help_text='Headphones/speaker/microphone', max_length=99)),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Headphones', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('layout_language', models.CharField(max_length=99)),
                ('type', models.CharField(max_length=19)),
                ('body_material', models.CharField(max_length=19)),
                ('connect_type', models.CharField(max_length=19)),
                ('form_factor', models.CharField(help_text='70%', max_length=19)),
                ('connect_interface', models.CharField(max_length=19)),
                ('cable_length', models.IntegerField(help_text='m')),
                ('total_num_keys', models.IntegerField()),
                ('weight', models.IntegerField(help_text='mm')),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Keyboard', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('aspect_ratio', models.CharField(help_text='16/9', max_length=19)),
                ('screen_coverage', models.CharField(help_text='matte', max_length=19)),
                ('resolution', models.CharField(help_text='1920x1080', max_length=19)),
                ('contrast', models.CharField(help_text='1000:1', max_length=19)),
                ('matrix_type', models.CharField(max_length=19)),
                ('matrix_illumination_type', models.CharField(max_length=19)),
                ('input_voltage_range', models.CharField(help_text='+ frequency of alternating current', max_length=49)),
                ('hdr', models.BooleanField()),
                ('vertical_viewing_angle', models.IntegerField(help_text='ยบ')),
                ('horizontal_viewing_angle', models.IntegerField(help_text='ยบ')),
                ('refresh_rate', models.IntegerField(help_text='Hz')),
                ('size', models.FloatField(help_text='inch')),
                ('ppi', models.IntegerField()),
                ('hdmi_connector', models.BooleanField()),
                ('displayport_connector', models.BooleanField()),
                ('speakers', models.BooleanField()),
                ('response_time', models.IntegerField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Monitor', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('socket', models.CharField(max_length=19)),
                ('chipset', models.CharField(max_length=19)),
                ('memory_type', models.CharField(max_length=5)),
                ('pcie_version', models.FloatField()),
                ('usb_ports', models.IntegerField()),
                ('power_phases', models.IntegerField()),
                ('max_memory_volume', models.IntegerField()),
                ('form_factor', models.CharField(max_length=19)),
                ('wifi', models.BooleanField()),
                ('pcie_lines', models.IntegerField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Motherboard', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('connect_type', models.CharField(max_length=19)),
                ('sensor_model', models.CharField(max_length=99)),
                ('origin_country', models.CharField(max_length=99)),
                ('num_keys', models.IntegerField()),
                ('survey_frequency', models.IntegerField(help_text='Hz')),
                ('speed', models.IntegerField(help_text='IPS')),
                ('weight', models.IntegerField(help_text='mm')),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Mouse', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='PowerUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('form_factor', models.CharField(max_length=19)),
                ('certificate_80plus', models.CharField(max_length=49)),
                ('input_voltage_range', models.CharField(help_text='+ frequency of alternating current', max_length=49)),
                ('total_power', models.IntegerField(help_text='W')),
                ('power_12th_volt_line', models.IntegerField(help_text='W')),
                ('current_12th_volt_line', models.IntegerField(help_text='ะ')),
                ('num_processor_power_cables', models.IntegerField(help_text='4 pin or 4+4 pin')),
                ('num_graphic_card_power_cables', models.IntegerField(help_text='6+2 pin')),
                ('num_sata_connectors', models.IntegerField()),
                ('num_molex_connectors', models.IntegerField()),
                ('pcie_cable_length', models.IntegerField()),
                ('sata_cable_length', models.IntegerField()),
                ('molex_cable_length', models.IntegerField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='PowerUnit', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('frequency', models.FloatField()),
                ('frequency_turbo', models.FloatField()),
                ('socket', models.CharField(max_length=19)),
                ('memory_type', models.CharField(max_length=5)),
                ('tdp', models.IntegerField()),
                ('max_tdp', models.IntegerField()),
                ('multiplier_block', models.BooleanField()),
                ('architecture', models.CharField(max_length=99)),
                ('hyper_trading', models.BooleanField()),
                ('release_year', models.DateField()),
                ('tech_process', models.IntegerField()),
                ('num_core', models.IntegerField()),
                ('max_memory_volume', models.IntegerField()),
                ('max_temperature', models.IntegerField()),
                ('graphic_core', models.BooleanField()),
                ('graphic_core_name', models.CharField(max_length=99)),
                ('pcie_version', models.FloatField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='Processor', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=999)),
                ('description', models.CharField(max_length=4999)),
                ('origin_country', models.CharField(max_length=99)),
                ('memory_type', models.CharField(max_length=5)),
                ('frequency', models.FloatField()),
                ('xmp', models.BooleanField()),
                ('volume', models.IntegerField()),
                ('supply_voltage', models.FloatField()),
                ('warranty_period', models.IntegerField(help_text='month')),
                ('price', models.IntegerField()),
                ('category', models.CharField(default='RAM', max_length=99)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nik', models.CharField(max_length=99)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_price', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cases', models.ManyToManyField(null=True, to='api.case')),
                ('coolers', models.ManyToManyField(null=True, to='api.cooler')),
                ('discs', models.ManyToManyField(null=True, to='api.disc')),
                ('fan', models.ManyToManyField(null=True, to='api.fan')),
                ('graphic_cards', models.ManyToManyField(null=True, to='api.graphiccard')),
                ('headphones', models.ManyToManyField(null=True, to='api.headphones')),
                ('keyboard', models.ManyToManyField(null=True, to='api.keyboard')),
                ('monitor', models.ManyToManyField(null=True, to='api.monitor')),
                ('motherboards', models.ManyToManyField(null=True, to='api.motherboard')),
                ('mouse', models.ManyToManyField(null=True, to='api.mouse')),
                ('power_unit', models.ManyToManyField(null=True, to='api.powerunit')),
                ('processors', models.ManyToManyField(null=True, to='api.processor')),
                ('RAM', models.ManyToManyField(null=True, to='api.ram')),
            ],
        ),
    ]
